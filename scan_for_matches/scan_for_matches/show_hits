#!/usr/bin/env perl

# usage: show_hits FieldsToSortOn < hits_from_scan_for_matches

while(($_ = <STDIN>) && ($_ =~ /^>(\S+)\s/))
{
    $id[$id_index] = $1;

    $_ = <STDIN>; chop;
    $matched[$id_index++] = $_;
}

if ($id_index > 0)
{
    for ($i=1, $max=length($id[0]); $i < $id_index; $i++)
    {
	if (length($id[$i]) > $max)
	{
	    $max = length($id[$i]);
	}
    }
    $id_len = $max;

    @tmp = split('\ ',$matched[0]);
    $n = $#tmp+1;

    for ($i=0; $i < $n; $i++)
    {
	$max = 0;
	for ($j=0; $j < $id_index; $j++)
	{
	    @tmp = split('\ ',$matched[$j]);
	    if ($max < length($tmp[$i]))
	    {
		$max = length($tmp[$i]);
	    }
	}
	$max_pu[$i] = $max;
    }
    
    for ($i=0; $i < $id_index; $i++)
    {
	$key = "";
	@tmp = split('\ ',$matched[$i]);
	for ($j=0; $j <= $#ARGV; $j++)
	{
	    $piece = $tmp[$ARGV[$j]];
	    $pad = $max_pu[$ARGV[$j]] - length($piece);
	    while ($pad--)
	    {
		$piece = "$piece ";
	    }
	    $key = $key.$piece;
	}
	push(@rec,"$key\t$id[$i]\t$matched[$i]");
    }
    @sorted = sort @rec;
    for ($i=0; $i <= $#sorted; $i++)
    {
	($key,$the_id,$hits) = split(/\t/,$sorted[$i]);
	$pad = $id_len - length($the_id);
	while ($pad--)
	{
	    $the_id = $the_id." ";
	}
	$line = $the_id.": ";
	@tmp = split('\ ',$hits);
	for ($j=0; $j <= $#tmp; $j++)
	{
	    $pad = $max_pu[$j] - length($tmp[$j]);
	    while ($pad--)
	    {
		$tmp[$j] = $tmp[$j]." ";
	    }
	    $line = "$line $tmp[$j]";
	}
	print "$line\n";
    }
}
